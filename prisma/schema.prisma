// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Movie {
  id                Int      @id @unique @default(autoincrement())
  title             String   @db.VarChar(246)
  isSubtitles       Boolean  @map("is_subtitles")
  theaterId         Int      @map("theater_id")
  createrCountryId  Int      @map("creater_country_id")
  movieFormatId     Int      @map("movie_format_id")
  screeningFormatId Int      @map("screening_format_id")
  viewStartDatetime DateTime @map("view_start_datetime")
  viewEndDatetime   DateTime @map("view_end_datetime")
  companionsCount   Int?     @map("companions_count")
  rating            Int?
  comment           String?  @db.Text

  theater         Theater         @relation(fields: [theaterId], references: [id])
  createrCountry  CreaterCountry  @relation(fields: [createrCountryId], references: [id])
  movieFormat     MovieFormat     @relation(fields: [movieFormatId], references: [id])
  screeningFormat ScreeningFormat @relation(fields: [screeningFormatId], references: [id])

  @@map("movies")
}

model Theater {
  id   Int    @id @unique @default(autoincrement())
  name String @unique @db.VarChar(246)

  movies Movie[]

  @@map("theaters")
}

model CreaterCountry {
  id   Int    @id @unique @default(autoincrement())
  name String @unique @db.VarChar(246)

  movies Movie[]

  @@map("creaters_countries")
}

model MovieFormat {
  id   Int    @id @unique @default(autoincrement())
  name String @unique @db.VarChar(246)

  movies Movie[]

  @@map("movie_formats")
}

model ScreeningFormat {
  id   Int    @id @unique @default(autoincrement())
  name String @unique @db.VarChar(246)

  movies Movie[]

  @@map("screening_formats")
}
